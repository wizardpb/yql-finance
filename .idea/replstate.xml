<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ReplState" timestamp="1481851941072">{:repl-history {:ide [], :local [&quot;(name \&quot;Str\&quot;)&quot; &quot;(name :q)&quot; &quot;(name 'sym)&quot; &quot;(concat \&quot;\\\&quot;\&quot; \&quot;\&quot;)&quot; &quot;(concat \&quot;\\\&quot;\&quot; \&quot;str\&quot;)&quot; &quot;(format-param \&quot;str\&quot;)&quot; &quot;(.format (SimpleDateFormat. \&quot;yyyy-MM-DD\&quot;) (Date. 116 11 12))&quot; &quot;(.format (SimpleDateFormat. \&quot;yyyy-MM-dd\&quot;) (Date. 116 11 12))&quot; &quot;(class [])&quot; &quot;(class '())&quot; &quot;(class \&quot;\&quot;)&quot; &quot;(format-param [])&quot; &quot;(format-param '())&quot; &quot;(format-param #{})&quot; &quot;(format-param #{\&quot;APPL\&quot;})&quot; &quot;(format-param :APPL)&quot; &quot;(format-param [:APPL])&quot; &quot;(format-param [:APPL :INTC])&quot; &quot;(class 'sym)&quot; &quot;(format-param '(a b))&quot; &quot;(replace \&quot;%1\&quot; #\&quot;%\\d\&quot; \&quot;rep\&quot;)&quot; &quot;(str/replace \&quot;%1\&quot; #\&quot;%\\d\&quot; \&quot;rep\&quot;)&quot; &quot;(str/replace \&quot;%1\&quot; #\&quot;%\\d\&quot; (fn [m] (print (class m)) \&quot;r\&quot;))&quot; &quot;(str/replace \&quot;%1\&quot; #\&quot;%\\d\&quot; (fn [m] (print m) \&quot;r\&quot;))&quot; &quot;(str/replace \&quot;%1\&quot; #\&quot;%\\d\&quot; (fn [m] (print (seq m)) \&quot;r\&quot;))&quot; &quot;(str/replace \&quot;%1\&quot; #\&quot;%\\d\&quot; (fn [m] (print (last (seq m))) \&quot;r\&quot;))&quot; &quot;(str/replace \&quot;%1\&quot; #\&quot;%\\d\&quot; (fn [m] (print (tail (seq m))) \&quot;r\&quot;))&quot; &quot;(str/replace \&quot;%1\&quot; #\&quot;%\\d\&quot; (fn [m] (print (first (seq m))) \&quot;r\&quot;))&quot; &quot;(str/replace \&quot;%1\&quot; #\&quot;%\\d\&quot; (fn [m] (print ( (subs 1 m))) \&quot;r\&quot;))&quot; &quot;(str/replace \&quot;%1\&quot; #\&quot;%\\d\&quot; (fn [m] (print ( (subs m 1))) \&quot;r\&quot;))&quot; &quot;(str/replace \&quot;%1\&quot; #\&quot;%\\d\&quot; (fn [m] (print (subs m 1)) \&quot;r\&quot;))&quot; &quot;(str/replace \&quot;%1\&quot; #\&quot;%\\d\&quot; (fn [m] (print (Integer/parse (subs m 1))) \&quot;r\&quot;))&quot; &quot;(str/replace \&quot;%1\&quot; #\&quot;%\\d\&quot; (fn [m] (print (Integer/parseInt (subs m 1))) \&quot;r\&quot;))&quot; &quot;(str/replace \&quot;%1\&quot; #\&quot;%\\d\&quot; (fn [m] (nth [\&quot;a\&quot; \&quot;b\&quot;] (Integer/parseInt (subs m 1))) \&quot;r\&quot;))&quot; &quot;(str/replace \&quot;%1\&quot; #\&quot;%\\d\&quot; (fn [m] (nth [\&quot;a\&quot; \&quot;b\&quot;] (Integer/parseInt (subs m 1)))))&quot; &quot;(str/replace \&quot;%1 %2\&quot; #\&quot;%\\d\&quot; (fn [m] (nth [\&quot;a\&quot; \&quot;b\&quot;] (dec (Integer/parseInt (subs m 1))))))&quot; &quot;(nth 1 [])&quot; &quot;(nth [] 1)&quot; &quot;(&lt; 1 [1 2])&quot; &quot;(&lt; 1 2)&quot; &quot;(&lt; 1 1)&quot; &quot;(arg-replacement [] \&quot;%1\&quot;)&quot; &quot;(arg-replacement [\&quot;a\&quot; \&quot;b\&quot;] \&quot;%1\&quot;)&quot; &quot;(arg-replacement [\&quot;a\&quot; \&quot;b\&quot;] \&quot;%2\&quot;)&quot; &quot;((partial arg-replacement [\&quot;a\&quot; \&quot;b\&quot;]) \&quot;%2\&quot;)&quot; &quot;(str/replace \&quot;%1\&quot; #\&quot;%\\d\&quot; (partial arg-replacement [\&quot;a\&quot;]))&quot; &quot;(str/replace \&quot;%1\&quot; #\&quot;%\\d\&quot; (partial arg-replacement [\&quot;a\&quot; \&quot;b\&quot;]))&quot; &quot;(str/replace \&quot;%1 %2\&quot; #\&quot;%\\d\&quot; (partial arg-replacement [\&quot;a\&quot; \&quot;b\&quot;]))&quot; &quot;(str/replace \&quot;%1 %3\&quot; #\&quot;%\\d\&quot; (partial arg-replacement [\&quot;a\&quot; \&quot;b\&quot;]))&quot; &quot;(build-query \&quot;select * in %1 where symbol = %2\&quot; \&quot;yahoo.finance\&quot; :AAPL)&quot; &quot;(build-query \&quot;select * in %1 where symbol in %2\&quot; \&quot;yahoo.finance\&quot; [:AAPL :INTC])&quot; &quot;(build-query \&quot;select * from %1 where symbol in %2\&quot; \&quot;yahoo.finance\&quot; [:AAPL :INTC])&quot; &quot;(build-query \&quot;select * from %1 where symbol in %2\&quot; [\&quot;yahoo.finance\&quot; [:AAPL :INTC]])&quot; &quot;(build-url \&quot;select * from %1 where symbol in %2\&quot; [\&quot;yahoo.finance\&quot; [:AAPL :INTC]])&quot; &quot;(build-url \&quot;select * from %1 where symbol in %2\&quot; \&quot;yahoo.finance\&quot; [:AAPL :INTC])&quot; &quot;(build-url \&quot;select * from yahoo.finance.historicaldata where symbol in %1\&quot; [:AAPL :INTC])&quot; &quot;(execute-query \&quot;select * from yahoo.finance.quote where symbol in %1\&quot; [:AAPL :INTC])&quot; &quot;(defn get-historical-data [:AAPL] \&quot;2016-12-10\&quot; \&quot;2016-12-10\&quot;)&quot; &quot;(get-historical-data [:AAPL] \&quot;2016-12-10\&quot; \&quot;2016-12-10\&quot;)&quot; &quot;(get-historical-data [:AAPL] \&quot;2016-12-09\&quot; \&quot;2016-12-09\&quot;)&quot; &quot;(get-historical-data [:AAPL :INTC] \&quot;2016-12-09\&quot; \&quot;2016-12-09\&quot;)&quot; &quot;(get-historical-data [:AAPL :INTC] \&quot;2016-12-01\&quot; \&quot;2016-12-09\&quot;)&quot; &quot;(get-historical-data [:AAPL :INTC] \&quot;2016-12-01\&quot; \&quot;2016-12-03\&quot;)&quot; &quot;(#{:a :b} b)&quot; &quot;(#{:a :b} :b)&quot; &quot;(#{:a :b} :c)&quot; &quot;(:a #{:a :b})&quot; &quot;(:c #{:a :b})&quot; &quot;(contains? )&quot; &quot;(contains? #{:a :b} :c)&quot; &quot;(contains? #{:a :b} :b)&quot; &quot;(last \&quot;abc\&quot;)&quot; &quot;(BigDecimal. \&quot;47.3M\&quot;)&quot; &quot;(BigDecimal. \&quot;47.3\&quot;)&quot; &quot;(re-matcher #\&quot;\\(\\d+\\.\\d+\\)\\(\\[MB)\&quot;)&quot; &quot;(re-matcher #\&quot;\\(\\d+\\.\\d+\\)\\(\\[MB]\\)\&quot;)&quot; &quot;(re-matcher #\&quot;\\(\\d+\\.\\d+\\)\\(\\[MB]\\)\&quot; \&quot;47.9B\&quot;)&quot; &quot;(re-groups (re-matcher #\&quot;\\(\\d+\\.\\d+\\)\\(\\[MB]\\)\&quot; \&quot;47.9B\&quot;))&quot; &quot;(re-matches #\&quot;\\(\\d+\\.\\d+\\)\\(\\[MB]\\)\&quot; \&quot;47.9B\&quot;)&quot; &quot;(re-matches #\&quot;\\(\\d+\\.\\d+\\)\\([MB]\\)\&quot; \&quot;47.9B\&quot;)&quot; &quot;(re-matches #\&quot;\\d+\\.\\d+[MB]\&quot; \&quot;47.9B\&quot;)&quot; &quot;(re-matches #\&quot;\\d+\\.\\d+([MB])\&quot; \&quot;47.9B\&quot;)&quot; &quot;(re-matches #\&quot;(\\d+\\.\\d+)([MB])\&quot; \&quot;47.9B\&quot;)&quot; &quot;(re-matches #\&quot;(\\d+\\.\\d+)([MB])\&quot; \&quot;47.9\&quot;)&quot; &quot;(if-let [[_ a b] (re-matches #\&quot;(\\d+\\.\\d+)([MB])\&quot; \&quot;47.9\&quot;)]\n  a\n  \&quot;Huh?\&quot;)&quot; &quot;(str/split \&quot;7.53 - 7.66\&quot; #\&quot; - \&quot;)&quot; &quot;(get-historical-data [:AAPL :INTC] \&quot;2016-12-01\&quot; \&quot;2016-12-01\&quot;)&quot; &quot;(format-param (Date. 116 11 06) )&quot; &quot;(get-historical-data [:AAPL :INTC] (Date. 116 11 06) (Date. 116 11 06))&quot; &quot;(get-quotes [:AAPL :INTC])&quot; &quot;(get-quotes [:WOGGY])&quot; &quot;(get-quotes [\&quot;Jicky\&quot;])&quot; &quot;(get-historical-data [:Wiggy] (Date. 116 11 06) (Date. 116 11 06))&quot; &quot;(get-historical-data [\&quot;hu?\&quot;] (Date. 116 11 06) (Date. 116 11 06))&quot; &quot;(get-quotes [:INTC])&quot; &quot;(get-quotes [:AAPL])&quot; &quot;(get-quotes [:HUHY])&quot; &quot;(get-quotes [:HUHY?])&quot; &quot;(get-quotes [:ig])&quot; &quot;(get-quotes [:woggy])&quot;], :remote []}}</component>
</project>